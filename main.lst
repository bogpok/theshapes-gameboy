                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _move
                                     13 	.globl _checkcollision
                                     14 	.globl _jump
                                     15 	.globl _set_jumping
                                     16 	.globl _draw_win
                                     17 	.globl _draw_win_line
                                     18 	.globl _strlen
                                     19 	.globl _font_set
                                     20 	.globl _font_load
                                     21 	.globl _font_init
                                     22 	.globl _set_sprite_data
                                     23 	.globl _set_win_tile_xy
                                     24 	.globl _set_bkg_tiles
                                     25 	.globl _set_bkg_data
                                     26 	.globl _wait_vbl_done
                                     27 	.globl _joypad
                                     28 	.globl _ground_y
                                     29 	.globl _TriaTile
                                     30 	.globl _RectTile
                                     31 	.globl _hello
                                     32 	.globl _groundTiles
                                     33 	.globl _bg
                                     34 	.globl _player_pos
                                     35 	.globl _jumping
                                     36 	.globl _speed
                                     37 	.globl _GRAVITY
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area _DATA
      000000                         45 _speed::
      000000                         46 	.ds 2
      000002                         47 _jumping::
      000002                         48 	.ds 1
      000003                         49 _player_pos::
      000003                         50 	.ds 2
                                     51 ;--------------------------------------------------------
                                     52 ; ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area _INITIALIZED
      000000                         55 _bg::
      000000                         56 	.ds 575
      00023F                         57 _groundTiles::
      00023F                         58 	.ds 112
      0002AF                         59 _hello::
      0002AF                         60 	.ds 9
      0002B8                         61 _RectTile::
      0002B8                         62 	.ds 32
      0002D8                         63 _TriaTile::
      0002D8                         64 	.ds 16
      0002E8                         65 _ground_y::
      0002E8                         66 	.ds 1
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area _DABS (ABS)
                                     71 ;--------------------------------------------------------
                                     72 ; global & static initialisations
                                     73 ;--------------------------------------------------------
                                     74 	.area _HOME
                                     75 	.area _GSINIT
                                     76 	.area _GSFINAL
                                     77 	.area _GSINIT
                                     78 ;--------------------------------------------------------
                                     79 ; Home
                                     80 ;--------------------------------------------------------
                                     81 	.area _HOME
                                     82 	.area _HOME
                                     83 ;--------------------------------------------------------
                                     84 ; code
                                     85 ;--------------------------------------------------------
                                     86 	.area _CODE
                                     87 ;winmap.c:7: static inline char chartoRAMInt(char c) {
                                     88 ;	---------------------------------
                                     89 ; Function chartoRAMInt
                                     90 ; ---------------------------------
      000000                         91 _chartoRAMInt:
                                     92 ;winmap.c:12: int c_int = c + 1; 
      000000 4F               [ 4]   93 	ld	c, a
      000001 6F               [ 4]   94 	ld	l, a
                                     95 ;	spillPairReg hl
                                     96 ;	spillPairReg hl
      000002 07               [ 4]   97 	rlca
      000003 9F               [ 4]   98 	sbc	a, a
      000004 67               [ 4]   99 	ld	h, a
                                    100 ;	spillPairReg hl
                                    101 ;	spillPairReg hl
      000005 23               [ 8]  102 	inc	hl
                                    103 ;winmap.c:14: return c_int - '0';
                                    104 ;winmap.c:13: if (c >= '0' && c <= '9') {
      000006 79               [ 4]  105 	ld	a, c
      000007 EE 80            [ 8]  106 	xor	a, #0x80
      000009 D6 B0            [ 8]  107 	sub	a, #0xb0
      00000B 38 1B            [12]  108 	jr	C, 00106$
      00000D 59               [ 4]  109 	ld	e, c
      00000E 3E 39            [ 8]  110 	ld	a,#0x39
      000010 57               [ 4]  111 	ld	d,a
      000011 91               [ 4]  112 	sub	a, c
      000012 CB 7B            [ 8]  113 	bit	7, e
      000014 28 07            [12]  114 	jr	Z, 00131$
      000016 CB 7A            [ 8]  115 	bit	7, d
      000018 20 08            [12]  116 	jr	NZ, 00132$
      00001A BF               [ 4]  117 	cp	a, a
      00001B 18 05            [12]  118 	jr	00132$
      00001D                        119 00131$:
      00001D CB 7A            [ 8]  120 	bit	7, d
      00001F 28 01            [12]  121 	jr	Z, 00132$
      000021 37               [ 4]  122 	scf
      000022                        123 00132$:
      000022 38 04            [12]  124 	jr	C, 00106$
                                    125 ;winmap.c:14: return c_int - '0';
      000024 7D               [ 4]  126 	ld	a, l
      000025 C6 D0            [ 8]  127 	add	a, #0xd0
      000027 C9               [16]  128 	ret
      000028                        129 00106$:
                                    130 ;winmap.c:15: } else if (c >= 'A' && c <= 'Z') {
      000028 79               [ 4]  131 	ld	a, c
      000029 EE 80            [ 8]  132 	xor	a, #0x80
      00002B D6 C1            [ 8]  133 	sub	a, #0xc1
      00002D 38 1B            [12]  134 	jr	C, 00102$
      00002F 59               [ 4]  135 	ld	e, c
      000030 3E 5A            [ 8]  136 	ld	a,#0x5a
      000032 57               [ 4]  137 	ld	d,a
      000033 91               [ 4]  138 	sub	a, c
      000034 CB 7B            [ 8]  139 	bit	7, e
      000036 28 07            [12]  140 	jr	Z, 00133$
      000038 CB 7A            [ 8]  141 	bit	7, d
      00003A 20 08            [12]  142 	jr	NZ, 00134$
      00003C BF               [ 4]  143 	cp	a, a
      00003D 18 05            [12]  144 	jr	00134$
      00003F                        145 00133$:
      00003F CB 7A            [ 8]  146 	bit	7, d
      000041 28 01            [12]  147 	jr	Z, 00134$
      000043 37               [ 4]  148 	scf
      000044                        149 00134$:
      000044 38 04            [12]  150 	jr	C, 00102$
                                    151 ;winmap.c:18: return c_int - 'A' + 0x0A;
      000046 7D               [ 4]  152 	ld	a, l
      000047 C6 C9            [ 8]  153 	add	a, #0xc9
      000049 C9               [16]  154 	ret
      00004A                        155 00102$:
                                    156 ;winmap.c:20: return 0;
      00004A AF               [ 4]  157 	xor	a, a
                                    158 ;winmap.c:22: }
      00004B C9               [16]  159 	ret
                                    160 ;winmap.c:30: void draw_win_line(int8_t xt, int8_t yt, char text[]) {
                                    161 ;	---------------------------------
                                    162 ; Function draw_win_line
                                    163 ; ---------------------------------
      00004C                        164 _draw_win_line::
      00004C E8 F9            [16]  165 	add	sp, #-7
      00004E F8 05            [12]  166 	ldhl	sp,	#5
      000050 32               [ 8]  167 	ld	(hl-), a
      000051 73               [ 8]  168 	ld	(hl), e
                                    169 ;winmap.c:31: uint8_t n = strlen(text); // <string.h>
      000052 F8 09            [12]  170 	ldhl	sp,	#9
      000054 2A               [ 8]  171 	ld	a, (hl+)
      000055 5F               [ 4]  172 	ld	e, a
      000056 56               [ 8]  173 	ld	d, (hl)
      000057 D5               [16]  174 	push	de
      000058 CDr00r00         [24]  175 	call	_strlen
      00005B E1               [12]  176 	pop	hl
      00005C F8 00            [12]  177 	ldhl	sp,	#0
      00005E 73               [ 8]  178 	ld	(hl), e
                                    179 ;winmap.c:32: for (uint8_t i = 0; i < n; i++)
      00005F F8 06            [12]  180 	ldhl	sp,	#6
      000061 36 00            [12]  181 	ld	(hl), #0x00
      000063                        182 00112$:
      000063 F8 06            [12]  183 	ldhl	sp,	#6
      000065 7E               [ 8]  184 	ld	a, (hl)
      000066 F8 00            [12]  185 	ldhl	sp,	#0
      000068 96               [ 8]  186 	sub	a, (hl)
      000069 D2rF6r00         [16]  187 	jp	NC, 00114$
                                    188 ;winmap.c:35: set_win_tile_xy(xt+i, yt, chartoRAMInt(text[i]));
      00006C F8 09            [12]  189 	ldhl	sp,#9
      00006E 2A               [ 8]  190 	ld	a, (hl+)
      00006F 5F               [ 4]  191 	ld	e, a
      000070 56               [ 8]  192 	ld	d, (hl)
      000071 F8 06            [12]  193 	ldhl	sp,	#6
      000073 6E               [ 8]  194 	ld	l, (hl)
      000074 26 00            [ 8]  195 	ld	h, #0x00
      000076 19               [ 8]  196 	add	hl, de
      000077 4D               [ 4]  197 	ld	c, l
      000078 44               [ 4]  198 	ld	b, h
      000079 0A               [ 8]  199 	ld	a, (bc)
      00007A F8 01            [12]  200 	ldhl	sp,	#1
      00007C 77               [ 8]  201 	ld	(hl), a
      00007D 2A               [ 8]  202 	ld	a, (hl+)
                                    203 ;winmap.c:12: int c_int = c + 1; 
      00007E 32               [ 8]  204 	ld	(hl-), a
                                    205 ;winmap.c:14: return c_int - '0';
      00007F 2A               [ 8]  206 	ld	a, (hl+)
      000080 23               [ 8]  207 	inc	hl
      000081 4F               [ 4]  208 	ld	c, a
      000082 07               [ 4]  209 	rlca
      000083 9F               [ 4]  210 	sbc	a, a
      000084 47               [ 4]  211 	ld	b, a
      000085 03               [ 8]  212 	inc	bc
                                    213 ;winmap.c:13: if (c >= '0' && c <= '9') {
      000086 79               [ 4]  214 	ld	a, c
      000087 32               [ 8]  215 	ld	(hl-), a
      000088 2B               [ 8]  216 	dec	hl
      000089 7E               [ 8]  217 	ld	a, (hl)
      00008A EE 80            [ 8]  218 	xor	a, #0x80
      00008C D6 B0            [ 8]  219 	sub	a, #0xb0
      00008E 38 1F            [12]  220 	jr	C, 00108$
      000090 5E               [ 8]  221 	ld	e, (hl)
      000091 3E 39            [ 8]  222 	ld	a,#0x39
      000093 57               [ 4]  223 	ld	d,a
      000094 96               [ 8]  224 	sub	a, (hl)
      000095 CB 7B            [ 8]  225 	bit	7, e
      000097 28 07            [12]  226 	jr	Z, 00147$
      000099 CB 7A            [ 8]  227 	bit	7, d
      00009B 20 08            [12]  228 	jr	NZ, 00148$
      00009D BF               [ 4]  229 	cp	a, a
      00009E 18 05            [12]  230 	jr	00148$
      0000A0                        231 00147$:
      0000A0 CB 7A            [ 8]  232 	bit	7, d
      0000A2 28 01            [12]  233 	jr	Z, 00148$
      0000A4 37               [ 4]  234 	scf
      0000A5                        235 00148$:
      0000A5 38 08            [12]  236 	jr	C, 00108$
                                    237 ;winmap.c:14: return c_int - '0';
      0000A7 F8 03            [12]  238 	ldhl	sp,	#3
      0000A9 7E               [ 8]  239 	ld	a, (hl)
      0000AA C6 D0            [ 8]  240 	add	a, #0xd0
      0000AC 77               [ 8]  241 	ld	(hl), a
      0000AD 18 2C            [12]  242 	jr	00110$
      0000AF                        243 00108$:
                                    244 ;winmap.c:15: } else if (c >= 'A' && c <= 'Z') {
      0000AF F8 02            [12]  245 	ldhl	sp,	#2
      0000B1 7E               [ 8]  246 	ld	a, (hl)
      0000B2 EE 80            [ 8]  247 	xor	a, #0x80
      0000B4 D6 C1            [ 8]  248 	sub	a, #0xc1
      0000B6 38 1F            [12]  249 	jr	C, 00106$
      0000B8 5E               [ 8]  250 	ld	e, (hl)
      0000B9 3E 5A            [ 8]  251 	ld	a,#0x5a
      0000BB 57               [ 4]  252 	ld	d,a
      0000BC 96               [ 8]  253 	sub	a, (hl)
      0000BD CB 7B            [ 8]  254 	bit	7, e
      0000BF 28 07            [12]  255 	jr	Z, 00149$
      0000C1 CB 7A            [ 8]  256 	bit	7, d
      0000C3 20 08            [12]  257 	jr	NZ, 00150$
      0000C5 BF               [ 4]  258 	cp	a, a
      0000C6 18 05            [12]  259 	jr	00150$
      0000C8                        260 00149$:
      0000C8 CB 7A            [ 8]  261 	bit	7, d
      0000CA 28 01            [12]  262 	jr	Z, 00150$
      0000CC 37               [ 4]  263 	scf
      0000CD                        264 00150$:
      0000CD 38 08            [12]  265 	jr	C, 00106$
                                    266 ;winmap.c:18: return c_int - 'A' + 0x0A;
      0000CF F8 03            [12]  267 	ldhl	sp,	#3
      0000D1 7E               [ 8]  268 	ld	a, (hl)
      0000D2 C6 C9            [ 8]  269 	add	a, #0xc9
      0000D4 77               [ 8]  270 	ld	(hl), a
      0000D5 18 04            [12]  271 	jr	00110$
      0000D7                        272 00106$:
                                    273 ;winmap.c:20: return 0;
      0000D7 F8 03            [12]  274 	ldhl	sp,	#3
      0000D9 36 00            [12]  275 	ld	(hl), #0x00
                                    276 ;winmap.c:35: set_win_tile_xy(xt+i, yt, chartoRAMInt(text[i]));
      0000DB                        277 00110$:
      0000DB F8 06            [12]  278 	ldhl	sp,	#6
      0000DD 3A               [ 8]  279 	ld	a, (hl-)
      0000DE 86               [ 8]  280 	add	a, (hl)
      0000DF F8 02            [12]  281 	ldhl	sp,	#2
      0000E1 22               [ 8]  282 	ld	(hl+), a
      0000E2 2A               [ 8]  283 	ld	a, (hl+)
      0000E3 57               [ 4]  284 	ld	d, a
      0000E4 3A               [ 8]  285 	ld	a, (hl-)
      0000E5 2B               [ 8]  286 	dec	hl
      0000E6 5F               [ 4]  287 	ld	e, a
      0000E7 D5               [16]  288 	push	de
      0000E8 7E               [ 8]  289 	ld	a, (hl)
      0000E9 F5               [16]  290 	push	af
      0000EA 33               [ 8]  291 	inc	sp
      0000EB CDr00r00         [24]  292 	call	_set_win_tile_xy
      0000EE E8 03            [16]  293 	add	sp, #3
                                    294 ;winmap.c:32: for (uint8_t i = 0; i < n; i++)
      0000F0 F8 06            [12]  295 	ldhl	sp,	#6
      0000F2 34               [12]  296 	inc	(hl)
      0000F3 C3r63r00         [16]  297 	jp	00112$
      0000F6                        298 00114$:
                                    299 ;winmap.c:38: }
      0000F6 E8 07            [16]  300 	add	sp, #7
      0000F8 E1               [12]  301 	pop	hl
      0000F9 F1               [12]  302 	pop	af
      0000FA E9               [ 4]  303 	jp	(hl)
                                    304 ;winmap.c:40: void draw_win(){
                                    305 ;	---------------------------------
                                    306 ; Function draw_win
                                    307 ; ---------------------------------
      0000FB                        308 _draw_win::
                                    309 ;winmap.c:41: draw_win_line(0, 0, "JUMPING");
      0000FB 11r0Fr01         [12]  310 	ld	de, #___str_0
      0000FE D5               [16]  311 	push	de
      0000FF AF               [ 4]  312 	xor	a, a
      000100 5F               [ 4]  313 	ld	e, a
      000101 CDr4Cr00         [24]  314 	call	_draw_win_line
                                    315 ;winmap.c:42: draw_win_line(0, 1, "KY KY");
      000104 11r17r01         [12]  316 	ld	de, #___str_1
      000107 D5               [16]  317 	push	de
      000108 1E 01            [ 8]  318 	ld	e, #0x01
      00010A AF               [ 4]  319 	xor	a, a
      00010B CDr4Cr00         [24]  320 	call	_draw_win_line
                                    321 ;winmap.c:43: }
      00010E C9               [16]  322 	ret
      00010F                        323 ___str_0:
      00010F 4A 55 4D 50 49 4E 47   324 	.ascii "JUMPING"
      000116 00                     325 	.db 0x00
      000117                        326 ___str_1:
      000117 4B 59 20 4B 59         327 	.ascii "KY KY"
      00011C 00                     328 	.db 0x00
                                    329 ;main.c:18: void set_jumping(BYTE on){
                                    330 ;	---------------------------------
                                    331 ; Function set_jumping
                                    332 ; ---------------------------------
      00011D                        333 _set_jumping::
      00011D 4F               [ 4]  334 	ld	c, a
                                    335 ;main.c:19: jumping = on;
      00011E 21r02r00         [12]  336 	ld	hl, #_jumping
      000121 71               [ 8]  337 	ld	(hl), c
                                    338 ;main.c:22: if (on){        
      000122 79               [ 4]  339 	ld	a, c
      000123 B7               [ 4]  340 	or	a, a
      000124 28 0D            [12]  341 	jr	Z, 00102$
                                    342 ;main.c:23: draw_win_line(8, 0, "1");
      000126 11r48r01         [12]  343 	ld	de, #___str_2
      000129 D5               [16]  344 	push	de
      00012A 1E 00            [ 8]  345 	ld	e, #0x00
      00012C 3E 08            [ 8]  346 	ld	a, #0x08
      00012E CDr4Cr00         [24]  347 	call	_draw_win_line
      000131 18 0B            [12]  348 	jr	00103$
      000133                        349 00102$:
                                    350 ;main.c:25: draw_win_line(8, 0, "0");
      000133 11r4Ar01         [12]  351 	ld	de, #___str_3
      000136 D5               [16]  352 	push	de
      000137 1E 00            [ 8]  353 	ld	e, #0x00
      000139 3E 08            [ 8]  354 	ld	a, #0x08
      00013B CDr4Cr00         [24]  355 	call	_draw_win_line
      00013E                        356 00103$:
                                    357 ;c:/gbdk/include/gb/gb.h:1468: WX_REG=x, WY_REG=y;
      00013E 3E 07            [ 8]  358 	ld	a, #0x07
      000140 E0r00            [12]  359 	ldh	(_WX_REG + 0), a
      000142 3E 78            [ 8]  360 	ld	a, #0x78
      000144 E0r00            [12]  361 	ldh	(_WY_REG + 0), a
                                    362 ;main.c:28: move_win(7, 120);
                                    363 ;main.c:29: }
      000146 C9               [16]  364 	ret
      000147                        365 _GRAVITY:
      000147 01                     366 	.db #0x01	; 1
      000148                        367 ___str_2:
      000148 31                     368 	.ascii "1"
      000149 00                     369 	.db 0x00
      00014A                        370 ___str_3:
      00014A 30                     371 	.ascii "0"
      00014B 00                     372 	.db 0x00
                                    373 ;main.c:31: void jump()
                                    374 ;	---------------------------------
                                    375 ; Function jump
                                    376 ; ---------------------------------
      00014C                        377 _jump::
                                    378 ;main.c:33: if (jumping==0){        
      00014C FAr02r00         [16]  379 	ld	a, (#_jumping)
      00014F B7               [ 4]  380 	or	a, a
      000150 C0               [20]  381 	ret	NZ
                                    382 ;main.c:34: set_jumping(1);
      000151 3E 01            [ 8]  383 	ld	a, #0x01
      000153 CDr1Dr01         [24]  384 	call	_set_jumping
                                    385 ;main.c:35: speed[1] = -5;
      000156 21r01r00         [12]  386 	ld	hl, #(_speed + 1)
      000159 36 FB            [12]  387 	ld	(hl), #0xfb
                                    388 ;main.c:38: }
      00015B C9               [16]  389 	ret
                                    390 ;main.c:40: UBYTE checkcollision(uint8_t x, uint8_t y){
                                    391 ;	---------------------------------
                                    392 ; Function checkcollision
                                    393 ; ---------------------------------
      00015C                        394 _checkcollision::
      00015C 3B               [ 8]  395 	dec	sp
      00015D 3B               [ 8]  396 	dec	sp
      00015E 4F               [ 4]  397 	ld	c, a
      00015F F8 01            [12]  398 	ldhl	sp,	#1
      000161 73               [ 8]  399 	ld	(hl), e
                                    400 ;main.c:41: uint8_t tile_i = x / 8;
      000162 06 00            [ 8]  401 	ld	b, #0x00
      000164 69               [ 4]  402 	ld	l, c
                                    403 ;	spillPairReg hl
                                    404 ;	spillPairReg hl
      000165 60               [ 4]  405 	ld	h, b
                                    406 ;	spillPairReg hl
                                    407 ;	spillPairReg hl
      000166 CB 78            [ 8]  408 	bit	7, b
      000168 28 04            [12]  409 	jr	Z, 00103$
      00016A 21 07 00         [12]  410 	ld	hl, #0x0007
      00016D 09               [ 8]  411 	add	hl, bc
      00016E                        412 00103$:
      00016E 4D               [ 4]  413 	ld	c, l
      00016F 44               [ 4]  414 	ld	b, h
      000170 CB 28            [ 8]  415 	sra	b
      000172 CB 19            [ 8]  416 	rr	c
      000174 CB 28            [ 8]  417 	sra	b
      000176 CB 19            [ 8]  418 	rr	c
      000178 CB 28            [ 8]  419 	sra	b
      00017A CB 19            [ 8]  420 	rr	c
      00017C F8 00            [12]  421 	ldhl	sp,	#0
                                    422 ;main.c:42: uint8_t tile_j = y / 8;
      00017E 79               [ 4]  423 	ld	a, c
      00017F 22               [ 8]  424 	ld	(hl+), a
      000180 4E               [ 8]  425 	ld	c, (hl)
      000181 06 00            [ 8]  426 	ld	b, #0x00
      000183 69               [ 4]  427 	ld	l, c
                                    428 ;	spillPairReg hl
                                    429 ;	spillPairReg hl
      000184 60               [ 4]  430 	ld	h, b
                                    431 ;	spillPairReg hl
                                    432 ;	spillPairReg hl
      000185 CB 78            [ 8]  433 	bit	7, b
      000187 28 04            [12]  434 	jr	Z, 00104$
      000189 21 07 00         [12]  435 	ld	hl, #0x0007
      00018C 09               [ 8]  436 	add	hl, bc
      00018D                        437 00104$:
      00018D 4D               [ 4]  438 	ld	c, l
      00018E CB 2C            [ 8]  439 	sra	h
      000190 CB 19            [ 8]  440 	rr	c
      000192 CB 2C            [ 8]  441 	sra	h
      000194 CB 19            [ 8]  442 	rr	c
      000196 CB 2C            [ 8]  443 	sra	h
      000198 CB 19            [ 8]  444 	rr	c
                                    445 ;main.c:43: uint8_t tile_id = bgWidth*tile_i + tile_j;
      00019A F8 00            [12]  446 	ldhl	sp,	#0
      00019C 7E               [ 8]  447 	ld	a, (hl)
      00019D CB 37            [ 8]  448 	swap	a
      00019F 07               [ 4]  449 	rlca
      0001A0 E6 E0            [ 8]  450 	and	a, #0xe0
      0001A2 81               [ 4]  451 	add	a, c
      0001A3 4F               [ 4]  452 	ld	c, a
                                    453 ;main.c:44: return bg[tile_id] == 0x00;
      0001A4 21r00r00         [12]  454 	ld	hl, #_bg
      0001A7 06 00            [ 8]  455 	ld	b, #0x00
      0001A9 09               [ 8]  456 	add	hl, bc
      0001AA 7E               [ 8]  457 	ld	a, (hl)
      0001AB B7               [ 4]  458 	or	a, a
      0001AC 3E 01            [ 8]  459 	ld	a, #0x01
      0001AE 28 01            [12]  460 	jr	Z, 00116$
      0001B0 AF               [ 4]  461 	xor	a, a
      0001B1                        462 00116$:
                                    463 ;main.c:45: }
      0001B1 33               [ 8]  464 	inc	sp
      0001B2 33               [ 8]  465 	inc	sp
      0001B3 C9               [16]  466 	ret
                                    467 ;main.c:47: void move(uint8_t dt){    
                                    468 ;	---------------------------------
                                    469 ; Function move
                                    470 ; ---------------------------------
      0001B4                        471 _move::
      0001B4 3B               [ 8]  472 	dec	sp
      0001B5 3B               [ 8]  473 	dec	sp
      0001B6 F8 01            [12]  474 	ldhl	sp,	#1
      0001B8 77               [ 8]  475 	ld	(hl), a
                                    476 ;main.c:50: if (joypad() & J_LEFT){
      0001B9 CDr00r00         [24]  477 	call	_joypad
      0001BC CB 4F            [ 8]  478 	bit	1, a
      0001BE 28 07            [12]  479 	jr	Z, 00105$
                                    480 ;main.c:51: speed[0] = -1;
      0001C0 21r00r00         [12]  481 	ld	hl, #_speed
      0001C3 36 FF            [12]  482 	ld	(hl), #0xff
      0001C5 18 12            [12]  483 	jr	00106$
      0001C7                        484 00105$:
                                    485 ;main.c:52: } else if (joypad() & J_RIGHT){
      0001C7 CDr00r00         [24]  486 	call	_joypad
      0001CA 0F               [ 4]  487 	rrca
      0001CB 30 07            [12]  488 	jr	NC, 00102$
                                    489 ;main.c:53: speed[0] = 1;
      0001CD 21r00r00         [12]  490 	ld	hl, #_speed
      0001D0 36 01            [12]  491 	ld	(hl), #0x01
      0001D2 18 05            [12]  492 	jr	00106$
      0001D4                        493 00102$:
                                    494 ;main.c:55: speed[0] = 0;
      0001D4 21r00r00         [12]  495 	ld	hl, #_speed
      0001D7 36 00            [12]  496 	ld	(hl), #0x00
      0001D9                        497 00106$:
                                    498 ;main.c:59: if (joypad() & J_UP){
      0001D9 CDr00r00         [24]  499 	call	_joypad
      0001DC CB 57            [ 8]  500 	bit	2, a
      0001DE 28 03            [12]  501 	jr	Z, 00108$
                                    502 ;main.c:60: jump();                
      0001E0 CDr4Cr01         [24]  503 	call	_jump
      0001E3                        504 00108$:
                                    505 ;main.c:63: speed[1] += GRAVITY;
      0001E3 FAr01r00         [16]  506 	ld	a, (#(_speed + 1) + 0)
      0001E6 21r47r01         [12]  507 	ld	hl, #_GRAVITY
      0001E9 4E               [ 8]  508 	ld	c, (hl)
      0001EA 81               [ 4]  509 	add	a, c
      0001EB EAr01r00         [16]  510 	ld	(#(_speed + 1)),a
                                    511 ;main.c:67: if (joypad() & J_A){
      0001EE CDr00r00         [24]  512 	call	_joypad
      0001F1 CB 67            [ 8]  513 	bit	4, a
      0001F3 28 05            [12]  514 	jr	Z, 00110$
                                    515 ;c:/gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      0001F5 21r02r00         [12]  516 	ld	hl, #(_shadow_OAM + 2)
      0001F8 36 01            [12]  517 	ld	(hl), #0x01
                                    518 ;main.c:68: set_sprite_tile(0,1);               
      0001FA                        519 00110$:
                                    520 ;main.c:70: if (joypad() & J_B){
      0001FA CDr00r00         [24]  521 	call	_joypad
      0001FD CB 6F            [ 8]  522 	bit	5, a
      0001FF 28 05            [12]  523 	jr	Z, 00112$
                                    524 ;c:/gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      000201 21r02r00         [12]  525 	ld	hl, #(_shadow_OAM + 2)
      000204 36 00            [12]  526 	ld	(hl), #0x00
                                    527 ;main.c:71: set_sprite_tile(0,0);               
      000206                        528 00112$:
                                    529 ;main.c:82: int8_t dx = speed[0]*dt;
      000206 21r00r00         [12]  530 	ld	hl, #_speed
      000209 4E               [ 8]  531 	ld	c, (hl)
      00020A F8 01            [12]  532 	ldhl	sp,	#1
      00020C 5E               [ 8]  533 	ld	e, (hl)
      00020D 79               [ 4]  534 	ld	a, c
      00020E CDr00r00         [24]  535 	call	__muluschar
                                    536 ;main.c:83: if (!checkcollision(player_pos[0]+=dx, player_pos[1]+=speed[1]*dt)){
      000211 21r04r00         [12]  537 	ld	hl, #(_player_pos + 1)
      000214 46               [ 8]  538 	ld	b, (hl)
      000215 21r01r00         [12]  539 	ld	hl, #(_speed + 1)
      000218 6E               [ 8]  540 	ld	l, (hl)
                                    541 ;	spillPairReg hl
      000219 C5               [16]  542 	push	bc
      00021A E5               [16]  543 	push	hl
      00021B F8 05            [12]  544 	ldhl	sp,	#5
      00021D 5E               [ 8]  545 	ld	e, (hl)
      00021E E1               [12]  546 	pop	hl
      00021F 7D               [ 4]  547 	ld	a, l
      000220 CDr00r00         [24]  548 	call	__muluschar
      000223 79               [ 4]  549 	ld	a, c
      000224 C1               [12]  550 	pop	bc
      000225 80               [ 4]  551 	add	a, b
      000226 47               [ 4]  552 	ld	b, a
      000227 21r04r00         [12]  553 	ld	hl, #(_player_pos + 1)
      00022A 70               [ 8]  554 	ld	(hl), b
      00022B FAr03r00         [16]  555 	ld	a, (#_player_pos + 0)
      00022E 81               [ 4]  556 	add	a, c
      00022F F8 00            [12]  557 	ldhl	sp,	#0
      000231 77               [ 8]  558 	ld	(hl), a
      000232 11r03r00         [12]  559 	ld	de, #_player_pos
      000235 7E               [ 8]  560 	ld	a, (hl)
      000236 12               [ 8]  561 	ld	(de), a
      000237 C5               [16]  562 	push	bc
      000238 58               [ 4]  563 	ld	e, b
      000239 7E               [ 8]  564 	ld	a, (hl)
      00023A CDr5Cr01         [24]  565 	call	_checkcollision
      00023D C1               [12]  566 	pop	bc
      00023E B7               [ 4]  567 	or	a, a
      00023F 20 1D            [12]  568 	jr	NZ, 00114$
                                    569 ;main.c:84: player_pos[0]+=dx;
      000241 FAr03r00         [16]  570 	ld	a, (#_player_pos + 0)
      000244 81               [ 4]  571 	add	a, c
      000245 EAr03r00         [16]  572 	ld	(#_player_pos),a
                                    573 ;main.c:85: player_pos[1]+=speed[1]*dt;
      000248 21r04r00         [12]  574 	ld	hl, #(_player_pos + 1)
      00024B 4E               [ 8]  575 	ld	c, (hl)
      00024C 21r01r00         [12]  576 	ld	hl, #(_speed + 1)
      00024F 46               [ 8]  577 	ld	b, (hl)
      000250 C5               [16]  578 	push	bc
      000251 F8 03            [12]  579 	ldhl	sp,	#3
      000253 5E               [ 8]  580 	ld	e, (hl)
      000254 78               [ 4]  581 	ld	a, b
      000255 CDr00r00         [24]  582 	call	__muluschar
      000258 79               [ 4]  583 	ld	a, c
      000259 C1               [12]  584 	pop	bc
      00025A 81               [ 4]  585 	add	a, c
      00025B EAr04r00         [16]  586 	ld	(#(_player_pos + 1)),a
      00025E                        587 00114$:
                                    588 ;main.c:94: if (player_pos[0] < 16){
      00025E FAr03r00         [16]  589 	ld	a, (#_player_pos + 0)
      000261 D6 10            [ 8]  590 	sub	a, #0x10
      000263 30 0A            [12]  591 	jr	NC, 00116$
                                    592 ;main.c:95: player_pos[0] = 16;
      000265 21r03r00         [12]  593 	ld	hl, #_player_pos
      000268 36 10            [12]  594 	ld	(hl), #0x10
                                    595 ;main.c:96: speed[0] = 0;        
      00026A 21r00r00         [12]  596 	ld	hl, #_speed
      00026D 36 00            [12]  597 	ld	(hl), #0x00
      00026F                        598 00116$:
                                    599 ;main.c:83: if (!checkcollision(player_pos[0]+=dx, player_pos[1]+=speed[1]*dt)){
      00026F 21r04r00         [12]  600 	ld	hl, #(_player_pos + 1)
      000272 4E               [ 8]  601 	ld	c, (hl)
                                    602 ;main.c:100: if (player_pos[1] >= ground_y){
      000273 79               [ 4]  603 	ld	a, c
      000274 21rE8r02         [12]  604 	ld	hl, #_ground_y
      000277 96               [ 8]  605 	sub	a, (hl)
      000278 38 10            [12]  606 	jr	C, 00120$
                                    607 ;main.c:101: player_pos[1] = ground_y;
      00027A 11r04r00         [12]  608 	ld	de, #(_player_pos + 1)
      00027D 7E               [ 8]  609 	ld	a, (hl)
      00027E 12               [ 8]  610 	ld	(de), a
                                    611 ;main.c:102: speed[1] = 0;
      00027F 21r01r00         [12]  612 	ld	hl, #(_speed + 1)
      000282 36 00            [12]  613 	ld	(hl), #0x00
                                    614 ;main.c:103: set_jumping(0);
      000284 AF               [ 4]  615 	xor	a, a
      000285 CDr1Dr01         [24]  616 	call	_set_jumping
      000288 18 33            [12]  617 	jr	00121$
      00028A                        618 00120$:
                                    619 ;main.c:104: } else if (player_pos[1]<=ground_y-50){
      00028A FArE8r02         [16]  620 	ld	a, (#_ground_y)
      00028D 06 00            [ 8]  621 	ld	b, #0x00
      00028F C6 CE            [ 8]  622 	add	a, #0xce
      000291 6F               [ 4]  623 	ld	l, a
                                    624 ;	spillPairReg hl
                                    625 ;	spillPairReg hl
      000292 78               [ 4]  626 	ld	a, b
      000293 CE FF            [ 8]  627 	adc	a, #0xff
      000295 47               [ 4]  628 	ld	b, a
      000296 26 00            [ 8]  629 	ld	h, #0x00
                                    630 ;	spillPairReg hl
                                    631 ;	spillPairReg hl
      000298 5C               [ 4]  632 	ld	e, h
      000299 50               [ 4]  633 	ld	d, b
      00029A 7D               [ 4]  634 	ld	a, l
      00029B 91               [ 4]  635 	sub	a, c
      00029C 78               [ 4]  636 	ld	a, b
      00029D 9C               [ 4]  637 	sbc	a, h
      00029E CB 7B            [ 8]  638 	bit	7, e
      0002A0 28 07            [12]  639 	jr	Z, 00177$
      0002A2 CB 7A            [ 8]  640 	bit	7, d
      0002A4 20 08            [12]  641 	jr	NZ, 00178$
      0002A6 BF               [ 4]  642 	cp	a, a
      0002A7 18 05            [12]  643 	jr	00178$
      0002A9                        644 00177$:
      0002A9 CB 7A            [ 8]  645 	bit	7, d
      0002AB 28 01            [12]  646 	jr	Z, 00178$
      0002AD 37               [ 4]  647 	scf
      0002AE                        648 00178$:
      0002AE 38 0D            [12]  649 	jr	C, 00121$
                                    650 ;main.c:106: player_pos[1] = ground_y-50;
      0002B0 FArE8r02         [16]  651 	ld	a, (#_ground_y)
      0002B3 C6 CE            [ 8]  652 	add	a, #0xce
      0002B5 EAr04r00         [16]  653 	ld	(#(_player_pos + 1)),a
                                    654 ;main.c:107: set_jumping(1);        
      0002B8 3E 01            [ 8]  655 	ld	a, #0x01
      0002BA CDr1Dr01         [24]  656 	call	_set_jumping
      0002BD                        657 00121$:
                                    658 ;main.c:112: move_sprite(0, player_pos[0], player_pos[1]);
      0002BD 21r04r00         [12]  659 	ld	hl, #(_player_pos + 1)
      0002C0 4E               [ 8]  660 	ld	c, (hl)
      0002C1 21r03r00         [12]  661 	ld	hl, #_player_pos
      0002C4 46               [ 8]  662 	ld	b, (hl)
                                    663 ;c:/gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      0002C5 21r00r00         [12]  664 	ld	hl, #_shadow_OAM
                                    665 ;c:/gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      0002C8 71               [ 8]  666 	ld	(hl), c
      0002C9 23               [ 8]  667 	inc	hl
      0002CA 70               [ 8]  668 	ld	(hl), b
                                    669 ;main.c:112: move_sprite(0, player_pos[0], player_pos[1]);
                                    670 ;main.c:117: }
      0002CB 33               [ 8]  671 	inc	sp
      0002CC 33               [ 8]  672 	inc	sp
      0002CD C9               [16]  673 	ret
                                    674 ;main.c:120: void main()
                                    675 ;	---------------------------------
                                    676 ; Function main
                                    677 ; ---------------------------------
      0002CE                        678 _main::
                                    679 ;main.c:122: font_init();
      0002CE CDr00r00         [24]  680 	call	_font_init
                                    681 ;main.c:123: font_t min_font = font_load(font_min); // 36 tiles!
      0002D1 11r00r00         [12]  682 	ld	de, #_font_min
      0002D4 D5               [16]  683 	push	de
      0002D5 CDr00r00         [24]  684 	call	_font_load
      0002D8 E1               [12]  685 	pop	hl
                                    686 ;main.c:124: font_set(min_font);
      0002D9 D5               [16]  687 	push	de
      0002DA CDr00r00         [24]  688 	call	_font_set
      0002DD E1               [12]  689 	pop	hl
                                    690 ;main.c:129: set_bkg_data(37, 7, groundTiles);
      0002DE 11r3Fr02         [12]  691 	ld	de, #_groundTiles
      0002E1 D5               [16]  692 	push	de
      0002E2 21 25 07         [12]  693 	ld	hl, #0x725
      0002E5 E5               [16]  694 	push	hl
      0002E6 CDr00r00         [24]  695 	call	_set_bkg_data
      0002E9 E8 04            [16]  696 	add	sp, #4
                                    697 ;main.c:132: set_bkg_tiles(0, 0, 32, 18,bg);
      0002EB 11r00r00         [12]  698 	ld	de, #_bg
      0002EE D5               [16]  699 	push	de
      0002EF 21 20 12         [12]  700 	ld	hl, #0x1220
      0002F2 E5               [16]  701 	push	hl
      0002F3 AF               [ 4]  702 	xor	a, a
      0002F4 0F               [ 4]  703 	rrca
      0002F5 F5               [16]  704 	push	af
      0002F6 CDr00r00         [24]  705 	call	_set_bkg_tiles
      0002F9 E8 06            [16]  706 	add	sp, #6
                                    707 ;main.c:133: SHOW_BKG;
      0002FB F0r00            [12]  708 	ldh	a, (_LCDC_REG + 0)
      0002FD F6 01            [ 8]  709 	or	a, #0x01
      0002FF E0r00            [12]  710 	ldh	(_LCDC_REG + 0), a
                                    711 ;main.c:135: draw_win(); 
      000301 CDrFBr00         [24]  712 	call	_draw_win
                                    713 ;c:/gbdk/include/gb/gb.h:1468: WX_REG=x, WY_REG=y;
      000304 3E 07            [ 8]  714 	ld	a, #0x07
      000306 E0r00            [12]  715 	ldh	(_WX_REG + 0), a
      000308 3E 78            [ 8]  716 	ld	a, #0x78
      00030A E0r00            [12]  717 	ldh	(_WY_REG + 0), a
                                    718 ;main.c:137: SHOW_WIN;
      00030C F0r00            [12]  719 	ldh	a, (_LCDC_REG + 0)
      00030E F6 20            [ 8]  720 	or	a, #0x20
      000310 E0r00            [12]  721 	ldh	(_LCDC_REG + 0), a
                                    722 ;main.c:141: set_sprite_data(0, 2, RectTile);
      000312 11rB8r02         [12]  723 	ld	de, #_RectTile
      000315 D5               [16]  724 	push	de
      000316 21 00 02         [12]  725 	ld	hl, #0x200
      000319 E5               [16]  726 	push	hl
      00031A CDr00r00         [24]  727 	call	_set_sprite_data
      00031D E8 04            [16]  728 	add	sp, #4
                                    729 ;c:/gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00031F 21r02r00         [12]  730 	ld	hl, #(_shadow_OAM + 2)
      000322 36 00            [12]  731 	ld	(hl), #0x00
                                    732 ;main.c:144: SHOW_SPRITES;
      000324 F0r00            [12]  733 	ldh	a, (_LCDC_REG + 0)
      000326 F6 02            [ 8]  734 	or	a, #0x02
      000328 E0r00            [12]  735 	ldh	(_LCDC_REG + 0), a
                                    736 ;main.c:149: player_pos[0] = 16;
      00032A 21r03r00         [12]  737 	ld	hl, #_player_pos
      00032D 36 10            [12]  738 	ld	(hl), #0x10
                                    739 ;main.c:150: player_pos[1] = ground_y;    
      00032F 01r04r00         [12]  740 	ld	bc, #_player_pos + 1
      000332 FArE8r02         [16]  741 	ld	a, (#_ground_y)
      000335 02               [ 8]  742 	ld	(bc), a
                                    743 ;main.c:152: speed[0]=0;
      000336 11r00r00         [12]  744 	ld	de, #_speed+0
      000339 AF               [ 4]  745 	xor	a, a
      00033A 12               [ 8]  746 	ld	(de), a
                                    747 ;main.c:153: speed[1]=0;
      00033B 13               [ 8]  748 	inc	de
      00033C AF               [ 4]  749 	xor	a, a
      00033D 12               [ 8]  750 	ld	(de), a
                                    751 ;main.c:155: set_jumping(0);
      00033E C5               [16]  752 	push	bc
      00033F AF               [ 4]  753 	xor	a, a
      000340 CDr1Dr01         [24]  754 	call	_set_jumping
      000343 C1               [12]  755 	pop	bc
                                    756 ;main.c:157: move_sprite(0, player_pos[0], player_pos[1]);
      000344 0A               [ 8]  757 	ld	a, (bc)
      000345 47               [ 4]  758 	ld	b, a
      000346 21r03r00         [12]  759 	ld	hl, #_player_pos
      000349 4E               [ 8]  760 	ld	c, (hl)
                                    761 ;c:/gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      00034A 21r00r00         [12]  762 	ld	hl, #_shadow_OAM
                                    763 ;c:/gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      00034D 78               [ 4]  764 	ld	a, b
      00034E 22               [ 8]  765 	ld	(hl+), a
      00034F 71               [ 8]  766 	ld	(hl), c
                                    767 ;main.c:159: while(1){
      000350                        768 00104$:
                                    769 ;main.c:171: if (sys_time % 3 == 0){
      000350 21r00r00         [12]  770 	ld	hl, #_sys_time
      000353 2A               [ 8]  771 	ld	a, (hl+)
      000354 5F               [ 4]  772 	ld	e, a
      000355 56               [ 8]  773 	ld	d, (hl)
      000356 01 03 00         [12]  774 	ld	bc, #0x0003
      000359 CDr00r00         [24]  775 	call	__moduint
      00035C 78               [ 4]  776 	ld	a, b
      00035D B1               [ 4]  777 	or	a, c
      00035E 20 05            [12]  778 	jr	NZ, 00102$
                                    779 ;main.c:173: move(dt);
      000360 3E 05            [ 8]  780 	ld	a, #0x05
      000362 CDrB4r01         [24]  781 	call	_move
      000365                        782 00102$:
                                    783 ;main.c:178: wait_vbl_done();
      000365 CDr00r00         [24]  784 	call	_wait_vbl_done
                                    785 ;main.c:181: }
      000368 18 E6            [12]  786 	jr	00104$
                                    787 	.area _CODE
                                    788 	.area _INITIALIZER
      000000                        789 __xinit__bg:
      000000 26                     790 	.db #0x26	; 38
      000001 25                     791 	.db #0x25	; 37
      000002 25                     792 	.db #0x25	; 37
      000003 25                     793 	.db #0x25	; 37
      000004 25                     794 	.db #0x25	; 37
      000005 25                     795 	.db #0x25	; 37
      000006 25                     796 	.db #0x25	; 37
      000007 25                     797 	.db #0x25	; 37
      000008 25                     798 	.db #0x25	; 37
      000009 25                     799 	.db #0x25	; 37
      00000A 25                     800 	.db #0x25	; 37
      00000B 25                     801 	.db #0x25	; 37
      00000C 25                     802 	.db #0x25	; 37
      00000D 25                     803 	.db #0x25	; 37
      00000E 25                     804 	.db #0x25	; 37
      00000F 25                     805 	.db #0x25	; 37
      000010 25                     806 	.db #0x25	; 37
      000011 25                     807 	.db #0x25	; 37
      000012 25                     808 	.db #0x25	; 37
      000013 25                     809 	.db #0x25	; 37
      000014 25                     810 	.db #0x25	; 37
      000015 25                     811 	.db #0x25	; 37
      000016 25                     812 	.db #0x25	; 37
      000017 25                     813 	.db #0x25	; 37
      000018 25                     814 	.db #0x25	; 37
      000019 25                     815 	.db #0x25	; 37
      00001A 26                     816 	.db #0x26	; 38
      00001B 25                     817 	.db #0x25	; 37
      00001C 25                     818 	.db #0x25	; 37
      00001D 25                     819 	.db #0x25	; 37
      00001E 25                     820 	.db #0x25	; 37
      00001F 25                     821 	.db #0x25	; 37
      000020 26                     822 	.db #0x26	; 38
      000021 25                     823 	.db #0x25	; 37
      000022 25                     824 	.db #0x25	; 37
      000023 25                     825 	.db #0x25	; 37
      000024 25                     826 	.db #0x25	; 37
      000025 25                     827 	.db #0x25	; 37
      000026 25                     828 	.db #0x25	; 37
      000027 25                     829 	.db #0x25	; 37
      000028 25                     830 	.db #0x25	; 37
      000029 25                     831 	.db #0x25	; 37
      00002A 25                     832 	.db #0x25	; 37
      00002B 25                     833 	.db #0x25	; 37
      00002C 25                     834 	.db #0x25	; 37
      00002D 25                     835 	.db #0x25	; 37
      00002E 25                     836 	.db #0x25	; 37
      00002F 25                     837 	.db #0x25	; 37
      000030 25                     838 	.db #0x25	; 37
      000031 25                     839 	.db #0x25	; 37
      000032 25                     840 	.db #0x25	; 37
      000033 25                     841 	.db #0x25	; 37
      000034 25                     842 	.db #0x25	; 37
      000035 25                     843 	.db #0x25	; 37
      000036 25                     844 	.db #0x25	; 37
      000037 25                     845 	.db #0x25	; 37
      000038 25                     846 	.db #0x25	; 37
      000039 25                     847 	.db #0x25	; 37
      00003A 26                     848 	.db #0x26	; 38
      00003B 25                     849 	.db #0x25	; 37
      00003C 25                     850 	.db #0x25	; 37
      00003D 25                     851 	.db #0x25	; 37
      00003E 25                     852 	.db #0x25	; 37
      00003F 25                     853 	.db #0x25	; 37
      000040 26                     854 	.db #0x26	; 38
      000041 25                     855 	.db #0x25	; 37
      000042 25                     856 	.db #0x25	; 37
      000043 25                     857 	.db #0x25	; 37
      000044 25                     858 	.db #0x25	; 37
      000045 25                     859 	.db #0x25	; 37
      000046 25                     860 	.db #0x25	; 37
      000047 25                     861 	.db #0x25	; 37
      000048 25                     862 	.db #0x25	; 37
      000049 25                     863 	.db #0x25	; 37
      00004A 25                     864 	.db #0x25	; 37
      00004B 25                     865 	.db #0x25	; 37
      00004C 25                     866 	.db #0x25	; 37
      00004D 25                     867 	.db #0x25	; 37
      00004E 25                     868 	.db #0x25	; 37
      00004F 25                     869 	.db #0x25	; 37
      000050 25                     870 	.db #0x25	; 37
      000051 25                     871 	.db #0x25	; 37
      000052 25                     872 	.db #0x25	; 37
      000053 25                     873 	.db #0x25	; 37
      000054 25                     874 	.db #0x25	; 37
      000055 25                     875 	.db #0x25	; 37
      000056 25                     876 	.db #0x25	; 37
      000057 25                     877 	.db #0x25	; 37
      000058 25                     878 	.db #0x25	; 37
      000059 25                     879 	.db #0x25	; 37
      00005A 26                     880 	.db #0x26	; 38
      00005B 26                     881 	.db #0x26	; 38
      00005C 25                     882 	.db #0x25	; 37
      00005D 25                     883 	.db #0x25	; 37
      00005E 25                     884 	.db #0x25	; 37
      00005F 25                     885 	.db #0x25	; 37
      000060 26                     886 	.db #0x26	; 38
      000061 25                     887 	.db #0x25	; 37
      000062 25                     888 	.db #0x25	; 37
      000063 25                     889 	.db #0x25	; 37
      000064 25                     890 	.db #0x25	; 37
      000065 25                     891 	.db #0x25	; 37
      000066 25                     892 	.db #0x25	; 37
      000067 25                     893 	.db #0x25	; 37
      000068 25                     894 	.db #0x25	; 37
      000069 25                     895 	.db #0x25	; 37
      00006A 25                     896 	.db #0x25	; 37
      00006B 25                     897 	.db #0x25	; 37
      00006C 25                     898 	.db #0x25	; 37
      00006D 25                     899 	.db #0x25	; 37
      00006E 25                     900 	.db #0x25	; 37
      00006F 25                     901 	.db #0x25	; 37
      000070 25                     902 	.db #0x25	; 37
      000071 25                     903 	.db #0x25	; 37
      000072 25                     904 	.db #0x25	; 37
      000073 25                     905 	.db #0x25	; 37
      000074 25                     906 	.db #0x25	; 37
      000075 25                     907 	.db #0x25	; 37
      000076 25                     908 	.db #0x25	; 37
      000077 25                     909 	.db #0x25	; 37
      000078 25                     910 	.db #0x25	; 37
      000079 25                     911 	.db #0x25	; 37
      00007A 26                     912 	.db #0x26	; 38
      00007B 26                     913 	.db #0x26	; 38
      00007C 25                     914 	.db #0x25	; 37
      00007D 25                     915 	.db #0x25	; 37
      00007E 25                     916 	.db #0x25	; 37
      00007F 25                     917 	.db #0x25	; 37
      000080 26                     918 	.db #0x26	; 38
      000081 25                     919 	.db #0x25	; 37
      000082 25                     920 	.db #0x25	; 37
      000083 25                     921 	.db #0x25	; 37
      000084 25                     922 	.db #0x25	; 37
      000085 25                     923 	.db #0x25	; 37
      000086 25                     924 	.db #0x25	; 37
      000087 25                     925 	.db #0x25	; 37
      000088 25                     926 	.db #0x25	; 37
      000089 25                     927 	.db #0x25	; 37
      00008A 25                     928 	.db #0x25	; 37
      00008B 25                     929 	.db #0x25	; 37
      00008C 25                     930 	.db #0x25	; 37
      00008D 25                     931 	.db #0x25	; 37
      00008E 25                     932 	.db #0x25	; 37
      00008F 25                     933 	.db #0x25	; 37
      000090 25                     934 	.db #0x25	; 37
      000091 25                     935 	.db #0x25	; 37
      000092 25                     936 	.db #0x25	; 37
      000093 25                     937 	.db #0x25	; 37
      000094 25                     938 	.db #0x25	; 37
      000095 25                     939 	.db #0x25	; 37
      000096 25                     940 	.db #0x25	; 37
      000097 25                     941 	.db #0x25	; 37
      000098 25                     942 	.db #0x25	; 37
      000099 25                     943 	.db #0x25	; 37
      00009A 26                     944 	.db #0x26	; 38
      00009B 26                     945 	.db #0x26	; 38
      00009C 25                     946 	.db #0x25	; 37
      00009D 25                     947 	.db #0x25	; 37
      00009E 25                     948 	.db #0x25	; 37
      00009F 25                     949 	.db #0x25	; 37
      0000A0 26                     950 	.db #0x26	; 38
      0000A1 25                     951 	.db #0x25	; 37
      0000A2 25                     952 	.db #0x25	; 37
      0000A3 25                     953 	.db #0x25	; 37
      0000A4 25                     954 	.db #0x25	; 37
      0000A5 25                     955 	.db #0x25	; 37
      0000A6 25                     956 	.db #0x25	; 37
      0000A7 25                     957 	.db #0x25	; 37
      0000A8 25                     958 	.db #0x25	; 37
      0000A9 25                     959 	.db #0x25	; 37
      0000AA 25                     960 	.db #0x25	; 37
      0000AB 25                     961 	.db #0x25	; 37
      0000AC 25                     962 	.db #0x25	; 37
      0000AD 25                     963 	.db #0x25	; 37
      0000AE 25                     964 	.db #0x25	; 37
      0000AF 25                     965 	.db #0x25	; 37
      0000B0 25                     966 	.db #0x25	; 37
      0000B1 25                     967 	.db #0x25	; 37
      0000B2 25                     968 	.db #0x25	; 37
      0000B3 25                     969 	.db #0x25	; 37
      0000B4 25                     970 	.db #0x25	; 37
      0000B5 25                     971 	.db #0x25	; 37
      0000B6 25                     972 	.db #0x25	; 37
      0000B7 25                     973 	.db #0x25	; 37
      0000B8 25                     974 	.db #0x25	; 37
      0000B9 25                     975 	.db #0x25	; 37
      0000BA 26                     976 	.db #0x26	; 38
      0000BB 25                     977 	.db #0x25	; 37
      0000BC 25                     978 	.db #0x25	; 37
      0000BD 25                     979 	.db #0x25	; 37
      0000BE 25                     980 	.db #0x25	; 37
      0000BF 25                     981 	.db #0x25	; 37
      0000C0 26                     982 	.db #0x26	; 38
      0000C1 25                     983 	.db #0x25	; 37
      0000C2 25                     984 	.db #0x25	; 37
      0000C3 25                     985 	.db #0x25	; 37
      0000C4 25                     986 	.db #0x25	; 37
      0000C5 25                     987 	.db #0x25	; 37
      0000C6 25                     988 	.db #0x25	; 37
      0000C7 25                     989 	.db #0x25	; 37
      0000C8 25                     990 	.db #0x25	; 37
      0000C9 25                     991 	.db #0x25	; 37
      0000CA 25                     992 	.db #0x25	; 37
      0000CB 25                     993 	.db #0x25	; 37
      0000CC 25                     994 	.db #0x25	; 37
      0000CD 25                     995 	.db #0x25	; 37
      0000CE 25                     996 	.db #0x25	; 37
      0000CF 25                     997 	.db #0x25	; 37
      0000D0 25                     998 	.db #0x25	; 37
      0000D1 25                     999 	.db #0x25	; 37
      0000D2 25                    1000 	.db #0x25	; 37
      0000D3 25                    1001 	.db #0x25	; 37
      0000D4 25                    1002 	.db #0x25	; 37
      0000D5 25                    1003 	.db #0x25	; 37
      0000D6 25                    1004 	.db #0x25	; 37
      0000D7 25                    1005 	.db #0x25	; 37
      0000D8 25                    1006 	.db #0x25	; 37
      0000D9 25                    1007 	.db #0x25	; 37
      0000DA 26                    1008 	.db #0x26	; 38
      0000DB 25                    1009 	.db #0x25	; 37
      0000DC 25                    1010 	.db #0x25	; 37
      0000DD 25                    1011 	.db #0x25	; 37
      0000DE 25                    1012 	.db #0x25	; 37
      0000DF 25                    1013 	.db #0x25	; 37
      0000E0 26                    1014 	.db #0x26	; 38
      0000E1 25                    1015 	.db #0x25	; 37
      0000E2 25                    1016 	.db #0x25	; 37
      0000E3 25                    1017 	.db #0x25	; 37
      0000E4 25                    1018 	.db #0x25	; 37
      0000E5 25                    1019 	.db #0x25	; 37
      0000E6 25                    1020 	.db #0x25	; 37
      0000E7 25                    1021 	.db #0x25	; 37
      0000E8 25                    1022 	.db #0x25	; 37
      0000E9 25                    1023 	.db #0x25	; 37
      0000EA 25                    1024 	.db #0x25	; 37
      0000EB 25                    1025 	.db #0x25	; 37
      0000EC 25                    1026 	.db #0x25	; 37
      0000ED 25                    1027 	.db #0x25	; 37
      0000EE 25                    1028 	.db #0x25	; 37
      0000EF 25                    1029 	.db #0x25	; 37
      0000F0 25                    1030 	.db #0x25	; 37
      0000F1 25                    1031 	.db #0x25	; 37
      0000F2 25                    1032 	.db #0x25	; 37
      0000F3 25                    1033 	.db #0x25	; 37
      0000F4 25                    1034 	.db #0x25	; 37
      0000F5 25                    1035 	.db #0x25	; 37
      0000F6 25                    1036 	.db #0x25	; 37
      0000F7 25                    1037 	.db #0x25	; 37
      0000F8 25                    1038 	.db #0x25	; 37
      0000F9 25                    1039 	.db #0x25	; 37
      0000FA 26                    1040 	.db #0x26	; 38
      0000FB 25                    1041 	.db #0x25	; 37
      0000FC 25                    1042 	.db #0x25	; 37
      0000FD 25                    1043 	.db #0x25	; 37
      0000FE 25                    1044 	.db #0x25	; 37
      0000FF 25                    1045 	.db #0x25	; 37
      000100 26                    1046 	.db #0x26	; 38
      000101 25                    1047 	.db #0x25	; 37
      000102 25                    1048 	.db #0x25	; 37
      000103 25                    1049 	.db #0x25	; 37
      000104 25                    1050 	.db #0x25	; 37
      000105 25                    1051 	.db #0x25	; 37
      000106 25                    1052 	.db #0x25	; 37
      000107 25                    1053 	.db #0x25	; 37
      000108 25                    1054 	.db #0x25	; 37
      000109 28                    1055 	.db #0x28	; 40
      00010A 28                    1056 	.db #0x28	; 40
      00010B 28                    1057 	.db #0x28	; 40
      00010C 28                    1058 	.db #0x28	; 40
      00010D 25                    1059 	.db #0x25	; 37
      00010E 25                    1060 	.db #0x25	; 37
      00010F 25                    1061 	.db #0x25	; 37
      000110 25                    1062 	.db #0x25	; 37
      000111 25                    1063 	.db #0x25	; 37
      000112 25                    1064 	.db #0x25	; 37
      000113 25                    1065 	.db #0x25	; 37
      000114 25                    1066 	.db #0x25	; 37
      000115 25                    1067 	.db #0x25	; 37
      000116 25                    1068 	.db #0x25	; 37
      000117 25                    1069 	.db #0x25	; 37
      000118 25                    1070 	.db #0x25	; 37
      000119 25                    1071 	.db #0x25	; 37
      00011A 26                    1072 	.db #0x26	; 38
      00011B 25                    1073 	.db #0x25	; 37
      00011C 25                    1074 	.db #0x25	; 37
      00011D 25                    1075 	.db #0x25	; 37
      00011E 25                    1076 	.db #0x25	; 37
      00011F 25                    1077 	.db #0x25	; 37
      000120 26                    1078 	.db #0x26	; 38
      000121 25                    1079 	.db #0x25	; 37
      000122 25                    1080 	.db #0x25	; 37
      000123 25                    1081 	.db #0x25	; 37
      000124 25                    1082 	.db #0x25	; 37
      000125 25                    1083 	.db #0x25	; 37
      000126 25                    1084 	.db #0x25	; 37
      000127 25                    1085 	.db #0x25	; 37
      000128 25                    1086 	.db #0x25	; 37
      000129 28                    1087 	.db #0x28	; 40
      00012A 28                    1088 	.db #0x28	; 40
      00012B 28                    1089 	.db #0x28	; 40
      00012C 28                    1090 	.db #0x28	; 40
      00012D 25                    1091 	.db #0x25	; 37
      00012E 25                    1092 	.db #0x25	; 37
      00012F 25                    1093 	.db #0x25	; 37
      000130 25                    1094 	.db #0x25	; 37
      000131 25                    1095 	.db #0x25	; 37
      000132 25                    1096 	.db #0x25	; 37
      000133 25                    1097 	.db #0x25	; 37
      000134 25                    1098 	.db #0x25	; 37
      000135 25                    1099 	.db #0x25	; 37
      000136 25                    1100 	.db #0x25	; 37
      000137 25                    1101 	.db #0x25	; 37
      000138 25                    1102 	.db #0x25	; 37
      000139 25                    1103 	.db #0x25	; 37
      00013A 26                    1104 	.db #0x26	; 38
      00013B 25                    1105 	.db #0x25	; 37
      00013C 25                    1106 	.db #0x25	; 37
      00013D 25                    1107 	.db #0x25	; 37
      00013E 25                    1108 	.db #0x25	; 37
      00013F 25                    1109 	.db #0x25	; 37
      000140 26                    1110 	.db #0x26	; 38
      000141 25                    1111 	.db #0x25	; 37
      000142 25                    1112 	.db #0x25	; 37
      000143 25                    1113 	.db #0x25	; 37
      000144 25                    1114 	.db #0x25	; 37
      000145 25                    1115 	.db #0x25	; 37
      000146 25                    1116 	.db #0x25	; 37
      000147 25                    1117 	.db #0x25	; 37
      000148 25                    1118 	.db #0x25	; 37
      000149 25                    1119 	.db #0x25	; 37
      00014A 25                    1120 	.db #0x25	; 37
      00014B 25                    1121 	.db #0x25	; 37
      00014C 25                    1122 	.db #0x25	; 37
      00014D 25                    1123 	.db #0x25	; 37
      00014E 25                    1124 	.db #0x25	; 37
      00014F 25                    1125 	.db #0x25	; 37
      000150 25                    1126 	.db #0x25	; 37
      000151 25                    1127 	.db #0x25	; 37
      000152 25                    1128 	.db #0x25	; 37
      000153 25                    1129 	.db #0x25	; 37
      000154 25                    1130 	.db #0x25	; 37
      000155 25                    1131 	.db #0x25	; 37
      000156 25                    1132 	.db #0x25	; 37
      000157 25                    1133 	.db #0x25	; 37
      000158 25                    1134 	.db #0x25	; 37
      000159 25                    1135 	.db #0x25	; 37
      00015A 26                    1136 	.db #0x26	; 38
      00015B 25                    1137 	.db #0x25	; 37
      00015C 25                    1138 	.db #0x25	; 37
      00015D 25                    1139 	.db #0x25	; 37
      00015E 25                    1140 	.db #0x25	; 37
      00015F 25                    1141 	.db #0x25	; 37
      000160 26                    1142 	.db #0x26	; 38
      000161 25                    1143 	.db #0x25	; 37
      000162 25                    1144 	.db #0x25	; 37
      000163 25                    1145 	.db #0x25	; 37
      000164 25                    1146 	.db #0x25	; 37
      000165 25                    1147 	.db #0x25	; 37
      000166 25                    1148 	.db #0x25	; 37
      000167 25                    1149 	.db #0x25	; 37
      000168 25                    1150 	.db #0x25	; 37
      000169 25                    1151 	.db #0x25	; 37
      00016A 25                    1152 	.db #0x25	; 37
      00016B 25                    1153 	.db #0x25	; 37
      00016C 25                    1154 	.db #0x25	; 37
      00016D 25                    1155 	.db #0x25	; 37
      00016E 25                    1156 	.db #0x25	; 37
      00016F 25                    1157 	.db #0x25	; 37
      000170 25                    1158 	.db #0x25	; 37
      000171 2B                    1159 	.db #0x2b	; 43
      000172 2B                    1160 	.db #0x2b	; 43
      000173 25                    1161 	.db #0x25	; 37
      000174 25                    1162 	.db #0x25	; 37
      000175 25                    1163 	.db #0x25	; 37
      000176 25                    1164 	.db #0x25	; 37
      000177 25                    1165 	.db #0x25	; 37
      000178 25                    1166 	.db #0x25	; 37
      000179 25                    1167 	.db #0x25	; 37
      00017A 26                    1168 	.db #0x26	; 38
      00017B 25                    1169 	.db #0x25	; 37
      00017C 25                    1170 	.db #0x25	; 37
      00017D 25                    1171 	.db #0x25	; 37
      00017E 25                    1172 	.db #0x25	; 37
      00017F 25                    1173 	.db #0x25	; 37
      000180 26                    1174 	.db #0x26	; 38
      000181 2B                    1175 	.db #0x2b	; 43
      000182 2B                    1176 	.db #0x2b	; 43
      000183 2B                    1177 	.db #0x2b	; 43
      000184 2B                    1178 	.db #0x2b	; 43
      000185 2B                    1179 	.db #0x2b	; 43
      000186 2B                    1180 	.db #0x2b	; 43
      000187 2B                    1181 	.db #0x2b	; 43
      000188 2B                    1182 	.db #0x2b	; 43
      000189 2B                    1183 	.db #0x2b	; 43
      00018A 2B                    1184 	.db #0x2b	; 43
      00018B 2B                    1185 	.db #0x2b	; 43
      00018C 2B                    1186 	.db #0x2b	; 43
      00018D 2B                    1187 	.db #0x2b	; 43
      00018E 2B                    1188 	.db #0x2b	; 43
      00018F 2B                    1189 	.db #0x2b	; 43
      000190 2B                    1190 	.db #0x2b	; 43
      000191 2B                    1191 	.db #0x2b	; 43
      000192 2B                    1192 	.db #0x2b	; 43
      000193 2B                    1193 	.db #0x2b	; 43
      000194 2B                    1194 	.db #0x2b	; 43
      000195 2B                    1195 	.db #0x2b	; 43
      000196 2B                    1196 	.db #0x2b	; 43
      000197 2B                    1197 	.db #0x2b	; 43
      000198 2B                    1198 	.db #0x2b	; 43
      000199 2B                    1199 	.db #0x2b	; 43
      00019A 26                    1200 	.db #0x26	; 38
      00019B 25                    1201 	.db #0x25	; 37
      00019C 25                    1202 	.db #0x25	; 37
      00019D 25                    1203 	.db #0x25	; 37
      00019E 25                    1204 	.db #0x25	; 37
      00019F 25                    1205 	.db #0x25	; 37
      0001A0 26                    1206 	.db #0x26	; 38
      0001A1 26                    1207 	.db #0x26	; 38
      0001A2 26                    1208 	.db #0x26	; 38
      0001A3 26                    1209 	.db #0x26	; 38
      0001A4 26                    1210 	.db #0x26	; 38
      0001A5 26                    1211 	.db #0x26	; 38
      0001A6 26                    1212 	.db #0x26	; 38
      0001A7 26                    1213 	.db #0x26	; 38
      0001A8 26                    1214 	.db #0x26	; 38
      0001A9 26                    1215 	.db #0x26	; 38
      0001AA 26                    1216 	.db #0x26	; 38
      0001AB 26                    1217 	.db #0x26	; 38
      0001AC 26                    1218 	.db #0x26	; 38
      0001AD 26                    1219 	.db #0x26	; 38
      0001AE 26                    1220 	.db #0x26	; 38
      0001AF 26                    1221 	.db #0x26	; 38
      0001B0 26                    1222 	.db #0x26	; 38
      0001B1 26                    1223 	.db #0x26	; 38
      0001B2 26                    1224 	.db #0x26	; 38
      0001B3 26                    1225 	.db #0x26	; 38
      0001B4 26                    1226 	.db #0x26	; 38
      0001B5 26                    1227 	.db #0x26	; 38
      0001B6 26                    1228 	.db #0x26	; 38
      0001B7 26                    1229 	.db #0x26	; 38
      0001B8 26                    1230 	.db #0x26	; 38
      0001B9 26                    1231 	.db #0x26	; 38
      0001BA 26                    1232 	.db #0x26	; 38
      0001BB 25                    1233 	.db #0x25	; 37
      0001BC 25                    1234 	.db #0x25	; 37
      0001BD 25                    1235 	.db #0x25	; 37
      0001BE 25                    1236 	.db #0x25	; 37
      0001BF 25                    1237 	.db #0x25	; 37
      0001C0 25                    1238 	.db #0x25	; 37
      0001C1 25                    1239 	.db #0x25	; 37
      0001C2 25                    1240 	.db #0x25	; 37
      0001C3 25                    1241 	.db #0x25	; 37
      0001C4 25                    1242 	.db #0x25	; 37
      0001C5 25                    1243 	.db #0x25	; 37
      0001C6 25                    1244 	.db #0x25	; 37
      0001C7 25                    1245 	.db #0x25	; 37
      0001C8 25                    1246 	.db #0x25	; 37
      0001C9 26                    1247 	.db #0x26	; 38
      0001CA 26                    1248 	.db #0x26	; 38
      0001CB 26                    1249 	.db #0x26	; 38
      0001CC 25                    1250 	.db #0x25	; 37
      0001CD 25                    1251 	.db #0x25	; 37
      0001CE 25                    1252 	.db #0x25	; 37
      0001CF 25                    1253 	.db #0x25	; 37
      0001D0 25                    1254 	.db #0x25	; 37
      0001D1 25                    1255 	.db #0x25	; 37
      0001D2 25                    1256 	.db #0x25	; 37
      0001D3 25                    1257 	.db #0x25	; 37
      0001D4 25                    1258 	.db #0x25	; 37
      0001D5 25                    1259 	.db #0x25	; 37
      0001D6 25                    1260 	.db #0x25	; 37
      0001D7 25                    1261 	.db #0x25	; 37
      0001D8 26                    1262 	.db #0x26	; 38
      0001D9 26                    1263 	.db #0x26	; 38
      0001DA 26                    1264 	.db #0x26	; 38
      0001DB 25                    1265 	.db #0x25	; 37
      0001DC 25                    1266 	.db #0x25	; 37
      0001DD 25                    1267 	.db #0x25	; 37
      0001DE 25                    1268 	.db #0x25	; 37
      0001DF 25                    1269 	.db #0x25	; 37
      0001E0 25                    1270 	.db #0x25	; 37
      0001E1 25                    1271 	.db #0x25	; 37
      0001E2 25                    1272 	.db #0x25	; 37
      0001E3 25                    1273 	.db #0x25	; 37
      0001E4 25                    1274 	.db #0x25	; 37
      0001E5 25                    1275 	.db #0x25	; 37
      0001E6 25                    1276 	.db #0x25	; 37
      0001E7 25                    1277 	.db #0x25	; 37
      0001E8 25                    1278 	.db #0x25	; 37
      0001E9 25                    1279 	.db #0x25	; 37
      0001EA 25                    1280 	.db #0x25	; 37
      0001EB 25                    1281 	.db #0x25	; 37
      0001EC 25                    1282 	.db #0x25	; 37
      0001ED 25                    1283 	.db #0x25	; 37
      0001EE 25                    1284 	.db #0x25	; 37
      0001EF 25                    1285 	.db #0x25	; 37
      0001F0 25                    1286 	.db #0x25	; 37
      0001F1 25                    1287 	.db #0x25	; 37
      0001F2 25                    1288 	.db #0x25	; 37
      0001F3 25                    1289 	.db #0x25	; 37
      0001F4 25                    1290 	.db #0x25	; 37
      0001F5 25                    1291 	.db #0x25	; 37
      0001F6 25                    1292 	.db #0x25	; 37
      0001F7 25                    1293 	.db #0x25	; 37
      0001F8 25                    1294 	.db #0x25	; 37
      0001F9 25                    1295 	.db #0x25	; 37
      0001FA 25                    1296 	.db #0x25	; 37
      0001FB 25                    1297 	.db #0x25	; 37
      0001FC 25                    1298 	.db #0x25	; 37
      0001FD 25                    1299 	.db #0x25	; 37
      0001FE 25                    1300 	.db #0x25	; 37
      0001FF 25                    1301 	.db #0x25	; 37
      000200 25                    1302 	.db #0x25	; 37
      000201 25                    1303 	.db #0x25	; 37
      000202 25                    1304 	.db #0x25	; 37
      000203 25                    1305 	.db #0x25	; 37
      000204 25                    1306 	.db #0x25	; 37
      000205 25                    1307 	.db #0x25	; 37
      000206 25                    1308 	.db #0x25	; 37
      000207 25                    1309 	.db #0x25	; 37
      000208 25                    1310 	.db #0x25	; 37
      000209 25                    1311 	.db #0x25	; 37
      00020A 25                    1312 	.db #0x25	; 37
      00020B 25                    1313 	.db #0x25	; 37
      00020C 25                    1314 	.db #0x25	; 37
      00020D 25                    1315 	.db #0x25	; 37
      00020E 25                    1316 	.db #0x25	; 37
      00020F 25                    1317 	.db #0x25	; 37
      000210 25                    1318 	.db #0x25	; 37
      000211 25                    1319 	.db #0x25	; 37
      000212 25                    1320 	.db #0x25	; 37
      000213 25                    1321 	.db #0x25	; 37
      000214 25                    1322 	.db #0x25	; 37
      000215 25                    1323 	.db #0x25	; 37
      000216 25                    1324 	.db #0x25	; 37
      000217 25                    1325 	.db #0x25	; 37
      000218 25                    1326 	.db #0x25	; 37
      000219 25                    1327 	.db #0x25	; 37
      00021A 25                    1328 	.db #0x25	; 37
      00021B 25                    1329 	.db #0x25	; 37
      00021C 25                    1330 	.db #0x25	; 37
      00021D 25                    1331 	.db #0x25	; 37
      00021E 25                    1332 	.db #0x25	; 37
      00021F 25                    1333 	.db #0x25	; 37
      000220 25                    1334 	.db #0x25	; 37
      000221 25                    1335 	.db #0x25	; 37
      000222 25                    1336 	.db #0x25	; 37
      000223 25                    1337 	.db #0x25	; 37
      000224 25                    1338 	.db #0x25	; 37
      000225 25                    1339 	.db #0x25	; 37
      000226 25                    1340 	.db #0x25	; 37
      000227 25                    1341 	.db #0x25	; 37
      000228 25                    1342 	.db #0x25	; 37
      000229 25                    1343 	.db #0x25	; 37
      00022A 25                    1344 	.db #0x25	; 37
      00022B 25                    1345 	.db #0x25	; 37
      00022C 25                    1346 	.db #0x25	; 37
      00022D 25                    1347 	.db #0x25	; 37
      00022E 25                    1348 	.db #0x25	; 37
      00022F 25                    1349 	.db #0x25	; 37
      000230 25                    1350 	.db #0x25	; 37
      000231 25                    1351 	.db #0x25	; 37
      000232 25                    1352 	.db #0x25	; 37
      000233 25                    1353 	.db #0x25	; 37
      000234 25                    1354 	.db #0x25	; 37
      000235 25                    1355 	.db #0x25	; 37
      000236 25                    1356 	.db #0x25	; 37
      000237 25                    1357 	.db #0x25	; 37
      000238 25                    1358 	.db #0x25	; 37
      000239 25                    1359 	.db #0x25	; 37
      00023A 25                    1360 	.db #0x25	; 37
      00023B 25                    1361 	.db #0x25	; 37
      00023C 25                    1362 	.db #0x25	; 37
      00023D 25                    1363 	.db #0x25	; 37
      00023E 25                    1364 	.db #0x25	; 37
      00023F                       1365 __xinit__groundTiles:
      00023F 00                    1366 	.db #0x00	; 0
      000240 00                    1367 	.db #0x00	; 0
      000241 00                    1368 	.db #0x00	; 0
      000242 00                    1369 	.db #0x00	; 0
      000243 00                    1370 	.db #0x00	; 0
      000244 00                    1371 	.db #0x00	; 0
      000245 00                    1372 	.db #0x00	; 0
      000246 00                    1373 	.db #0x00	; 0
      000247 00                    1374 	.db #0x00	; 0
      000248 00                    1375 	.db #0x00	; 0
      000249 00                    1376 	.db #0x00	; 0
      00024A 00                    1377 	.db #0x00	; 0
      00024B 00                    1378 	.db #0x00	; 0
      00024C 00                    1379 	.db #0x00	; 0
      00024D 00                    1380 	.db #0x00	; 0
      00024E 00                    1381 	.db #0x00	; 0
      00024F F8                    1382 	.db #0xf8	; 248
      000250 F8                    1383 	.db #0xf8	; 248
      000251 8E                    1384 	.db #0x8e	; 142
      000252 8E                    1385 	.db #0x8e	; 142
      000253 82                    1386 	.db #0x82	; 130
      000254 82                    1387 	.db #0x82	; 130
      000255 82                    1388 	.db #0x82	; 130
      000256 82                    1389 	.db #0x82	; 130
      000257 3E                    1390 	.db #0x3e	; 62
      000258 3E                    1391 	.db #0x3e	; 62
      000259 E6                    1392 	.db #0xe6	; 230
      00025A E6                    1393 	.db #0xe6	; 230
      00025B CD                    1394 	.db #0xcd	; 205
      00025C CD                    1395 	.db #0xcd	; 205
      00025D 09                    1396 	.db #0x09	; 9
      00025E 09                    1397 	.db #0x09	; 9
      00025F E0                    1398 	.db #0xe0	; 224
      000260 E0                    1399 	.db #0xe0	; 224
      000261 A2                    1400 	.db #0xa2	; 162
      000262 A2                    1401 	.db #0xa2	; 162
      000263 07                    1402 	.db #0x07	; 7
      000264 07                    1403 	.db #0x07	; 7
      000265 09                    1404 	.db #0x09	; 9
      000266 09                    1405 	.db #0x09	; 9
      000267 1B                    1406 	.db #0x1b	; 27
      000268 1B                    1407 	.db #0x1b	; 27
      000269 12                    1408 	.db #0x12	; 18
      00026A 12                    1409 	.db #0x12	; 18
      00026B B6                    1410 	.db #0xb6	; 182
      00026C B6                    1411 	.db #0xb6	; 182
      00026D A0                    1412 	.db #0xa0	; 160
      00026E A0                    1413 	.db #0xa0	; 160
      00026F FF                    1414 	.db #0xff	; 255
      000270 FF                    1415 	.db #0xff	; 255
      000271 81                    1416 	.db #0x81	; 129
      000272 81                    1417 	.db #0x81	; 129
      000273 81                    1418 	.db #0x81	; 129
      000274 81                    1419 	.db #0x81	; 129
      000275 9B                    1420 	.db #0x9b	; 155
      000276 9B                    1421 	.db #0x9b	; 155
      000277 8E                    1422 	.db #0x8e	; 142
      000278 8E                    1423 	.db #0x8e	; 142
      000279 81                    1424 	.db #0x81	; 129
      00027A 81                    1425 	.db #0x81	; 129
      00027B FF                    1426 	.db #0xff	; 255
      00027C FF                    1427 	.db #0xff	; 255
      00027D C1                    1428 	.db #0xc1	; 193
      00027E C1                    1429 	.db #0xc1	; 193
      00027F 70                    1430 	.db #0x70	; 112	'p'
      000280 70                    1431 	.db #0x70	; 112	'p'
      000281 90                    1432 	.db #0x90	; 144
      000282 90                    1433 	.db #0x90	; 144
      000283 88                    1434 	.db #0x88	; 136
      000284 88                    1435 	.db #0x88	; 136
      000285 89                    1436 	.db #0x89	; 137
      000286 89                    1437 	.db #0x89	; 137
      000287 8B                    1438 	.db #0x8b	; 139
      000288 8B                    1439 	.db #0x8b	; 139
      000289 7F                    1440 	.db #0x7f	; 127
      00028A 7F                    1441 	.db #0x7f	; 127
      00028B 7B                    1442 	.db #0x7b	; 123
      00028C 7B                    1443 	.db #0x7b	; 123
      00028D FE                    1444 	.db #0xfe	; 254
      00028E FE                    1445 	.db #0xfe	; 254
      00028F 00                    1446 	.db #0x00	; 0
      000290 00                    1447 	.db #0x00	; 0
      000291 00                    1448 	.db #0x00	; 0
      000292 00                    1449 	.db #0x00	; 0
      000293 00                    1450 	.db #0x00	; 0
      000294 00                    1451 	.db #0x00	; 0
      000295 00                    1452 	.db #0x00	; 0
      000296 00                    1453 	.db #0x00	; 0
      000297 FF                    1454 	.db #0xff	; 255
      000298 FF                    1455 	.db #0xff	; 255
      000299 40                    1456 	.db #0x40	; 64
      00029A FF                    1457 	.db #0xff	; 255
      00029B FE                    1458 	.db #0xfe	; 254
      00029C 01                    1459 	.db #0x01	; 1
      00029D FF                    1460 	.db #0xff	; 255
      00029E 00                    1461 	.db #0x00	; 0
      00029F 00                    1462 	.db #0x00	; 0
      0002A0 00                    1463 	.db #0x00	; 0
      0002A1 00                    1464 	.db #0x00	; 0
      0002A2 00                    1465 	.db #0x00	; 0
      0002A3 00                    1466 	.db #0x00	; 0
      0002A4 00                    1467 	.db #0x00	; 0
      0002A5 00                    1468 	.db #0x00	; 0
      0002A6 00                    1469 	.db #0x00	; 0
      0002A7 FF                    1470 	.db #0xff	; 255
      0002A8 FF                    1471 	.db #0xff	; 255
      0002A9 00                    1472 	.db #0x00	; 0
      0002AA FF                    1473 	.db #0xff	; 255
      0002AB FF                    1474 	.db #0xff	; 255
      0002AC 00                    1475 	.db #0x00	; 0
      0002AD FF                    1476 	.db #0xff	; 255
      0002AE 00                    1477 	.db #0x00	; 0
      0002AF                       1478 __xinit__hello:
      0002AF 48 45 4C 4C 4F 32 32  1479 	.ascii "HELLO228"
             38
      0002B7 00                    1480 	.db 0x00
      0002B8                       1481 __xinit__RectTile:
      0002B8 7E                    1482 	.db #0x7e	; 126
      0002B9 7E                    1483 	.db #0x7e	; 126
      0002BA C3                    1484 	.db #0xc3	; 195
      0002BB FF                    1485 	.db #0xff	; 255
      0002BC BD                    1486 	.db #0xbd	; 189
      0002BD FF                    1487 	.db #0xff	; 255
      0002BE A5                    1488 	.db #0xa5	; 165
      0002BF FF                    1489 	.db #0xff	; 255
      0002C0 A5                    1490 	.db #0xa5	; 165
      0002C1 FF                    1491 	.db #0xff	; 255
      0002C2 BD                    1492 	.db #0xbd	; 189
      0002C3 FF                    1493 	.db #0xff	; 255
      0002C4 C3                    1494 	.db #0xc3	; 195
      0002C5 FF                    1495 	.db #0xff	; 255
      0002C6 7E                    1496 	.db #0x7e	; 126
      0002C7 7E                    1497 	.db #0x7e	; 126
      0002C8 00                    1498 	.db #0x00	; 0
      0002C9 00                    1499 	.db #0x00	; 0
      0002CA 18                    1500 	.db #0x18	; 24
      0002CB 18                    1501 	.db #0x18	; 24
      0002CC 3C                    1502 	.db #0x3c	; 60
      0002CD 3C                    1503 	.db #0x3c	; 60
      0002CE 7E                    1504 	.db #0x7e	; 126
      0002CF 66                    1505 	.db #0x66	; 102	'f'
      0002D0 7E                    1506 	.db #0x7e	; 126
      0002D1 42                    1507 	.db #0x42	; 66	'B'
      0002D2 99                    1508 	.db #0x99	; 153
      0002D3 FF                    1509 	.db #0xff	; 255
      0002D4 99                    1510 	.db #0x99	; 153
      0002D5 FF                    1511 	.db #0xff	; 255
      0002D6 7E                    1512 	.db #0x7e	; 126
      0002D7 7E                    1513 	.db #0x7e	; 126
      0002D8                       1514 __xinit__TriaTile:
      0002D8 00                    1515 	.db #0x00	; 0
      0002D9 00                    1516 	.db #0x00	; 0
      0002DA 18                    1517 	.db #0x18	; 24
      0002DB 18                    1518 	.db #0x18	; 24
      0002DC 3C                    1519 	.db #0x3c	; 60
      0002DD 3C                    1520 	.db #0x3c	; 60
      0002DE 7E                    1521 	.db #0x7e	; 126
      0002DF 66                    1522 	.db #0x66	; 102	'f'
      0002E0 7E                    1523 	.db #0x7e	; 126
      0002E1 42                    1524 	.db #0x42	; 66	'B'
      0002E2 99                    1525 	.db #0x99	; 153
      0002E3 FF                    1526 	.db #0xff	; 255
      0002E4 99                    1527 	.db #0x99	; 153
      0002E5 FF                    1528 	.db #0xff	; 255
      0002E6 7E                    1529 	.db #0x7e	; 126
      0002E7 7E                    1530 	.db #0x7e	; 126
      0002E8                       1531 __xinit__ground_y:
      0002E8 6C                    1532 	.db #0x6c	; 108	'l'
                                   1533 	.area _CABS (ABS)
